buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    if (!project.hasProperty('disableCrashlytics')) {
        dependencies {
            //noinspection GradleDynamicVersion
            classpath 'io.fabric.tools:gradle:1.+'
        }
    }
}

apply plugin: 'com.android.application'

if (!project.hasProperty('disableCrashlytics')) {
    apply plugin: 'io.fabric'

    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
}

android {
    compileSdkVersion rootProject.targetSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    defaultConfig {
        applicationId "com.marverenic.music"
        minSdkVersion 16
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 40325
        versionName "3.0 RC 1"
        resConfigs "en", "es", "nl"
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true

            // Setting the "NO_CRASHLYTICS" environment variable to "true" prevents crashlytics from
            // being processed on release builds. This is allows Travis CI builds to succeed without
            // checking API keys into version control
            boolean disableCrashlytics = "true".equalsIgnoreCase("$System.env.NO_CRASHLYTICS")
            ext.enableCrashlytics = !disableCrashlytics
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix '.debug'
            ext.enableCrashlytics = false
        }
    }

    flavorDimensions "implementation"
    productFlavors {
        foss {
            dimension "implementation"
        }

        hathor {
            dimension "implementation"
        }

        marketing {
            dimension "implementation"
            applicationIdSuffix ".demo"
            versionNameSuffix ".demo"
            ext.enableCrashlytics = false
        }
    }

    bundle {
        language {
            enableSplit = false
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':seekarc')
    implementation project(':exoplayer-flac')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.2.1'

    implementation 'com.marverenic.heterogeneousadapter:heterogeneousadapter:1.1'

    implementation "com.android.support:appcompat-v7:$rootProject.supportLibVersion"
    implementation "com.android.support:design:$rootProject.supportLibVersion"
    implementation "com.android.support:support-media-compat:$rootProject.supportLibVersion"
    implementation "com.android.support:support-annotations:$rootProject.supportLibVersion"
    implementation "com.android.support:palette-v7:$rootProject.supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibVersion"
    implementation "com.android.support:preference-v14:$rootProject.supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.google.android.exoplayer:exoplayer-core:$rootProject.exoplayerVersion"

    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    testImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.google.code.gson:gson:2.7'

    implementation 'com.simplecityapps:recyclerview-fastscroll:1.0.20'
    implementation ('com.h6ah4i.android.widget.verticalseekbar:verticalseekbar:0.5.2') {
        exclude group: 'com.android.support'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }

    implementation 'com.google.dagger:dagger:2.6'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.6'

    implementation 'io.reactivex:rxjava:1.1.6'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.trello:rxlifecycle:0.6.1'
    implementation 'com.trello:rxlifecycle-components:0.6.1'
    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
    implementation 'nl.littlerobots.rxlint:rxlint:1.0'

    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.2'

    implementation 'com.jakewharton.timber:timber:4.1.2'

    if (!project.hasProperty('disableCrashlytics')) {
        implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
            transitive = true
        }
    }
}
